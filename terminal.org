#+title: Terminal Basics
#+author: Gerard Bentley
#+date: <2020-01-23 Thu>

The Terminal, also called [[https://askubuntu.com/questions/506510/what-is-the-difference-between-terminal-console-shell-and-command-line][shell, console, command line]] (with a fair bit of nuance)
lets you access programs and files and execute commands on those programs and files without opening any apps or windows, it all stays in the terminal.

*Basic Navigation

When you open Terminal.app (on mac you can use command-spacebar then search `Terminal`) all you get is a blank command line prompt, probably ending with `$`

The terminal works like a filesystem/Finder window in that you need to navigate 'up' and 'down' folders to find different files.
When you open a new Terminal it is most likely located at your account's Home folder (also referred to as ~).

**NOTE: On Mac the ~ can be replaced with /Users/YOUR-USERNAME/ for an absolute path ([[https://www.linuxnix.com/abslute-path-vs-relative-path-in-linuxunix/][absolute vs relative]] explanation)
For reference, your Desktop folder is located at ~/Desktop, your Documents at ~/Documents

Now for the 3 Basic commands that will help you navigate around:

**pwd

`Print Working Directory`: Tells you where in the filesystem the command line is currently pointed. On a fresh Terminal window it should show /Users/YOUR-USERNAME/

**ls

`List`: Lists out all the files and directories in the current directory you're pointed at. Also helps you know where in the filesystem you are

**cd

`Change Directory`: Actually moves where the command line is pointed to a different directory / folder.

The common uses of `cd` and `ls`:

**Go to your project folder

On my personal computer I try to keep all my coding projects under a folder called `research` (in their own individual folders) which is in my Home folder (~/research or /Users/Gerard/research)

So to get to my project I open terminal and enter
#+BEGIN_SRC bash
     cd research/my-project-folder
#+END_SRC
***NOTE: This works because the Terminal is already pointed at my ~/ directory and `research` is in that directory. You can use `ls` to see if `research` is present

If you don't remember the project-folder name you can do the following
#+BEGIN_SRC bash
     cd research
     ls
#+END_SRC
This will show you all the files and folders in `research`, then you can simply
#+BEGIN_SRC bash
     cd project-folder-i-remember-now
#+END_SRC

**Go back one or more directories
As ~/ is equivalent to /Users/YOUR-USERNAME/ on mac, ./ is equivalent to `pwd`/

By this I mean that `.` represents the current working directory, where the terminal command line is pointed.

So the same command from before works the same like this (from a fresh Terminal located at ~/)
#+BEGIN_SRC bash
     cd ./research/my-project-folder
#+END_SRC

After executing that command, `pwd` will tell you the Terminal is at /Users/Gerard/research/my-project-folder, which we want because we just `cd`d into that directory

If we wanted to switch projects (to a different folder in `research`), we need to go 'up' a folder. To do this we use `..` to represent the folder 'above' the current folder
#+BEGIN_SRC bash
     cd ..
#+END_SRC
This brings us back to `research`, so `pwd` will say /Users/Gerard/research/

Now we can cd into a different folder
#+BEGIN_SRC bash
     cd my-other-project-folder
#+END_SRC

If we wanted to switch to a different project directly in one command we can use
#+BEGIN_SRC bash
     cd ../third-folder
#+END_SRC
I think of this as `going to third-folder, which is in the folder above the current one`
